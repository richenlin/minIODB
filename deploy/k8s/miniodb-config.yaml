apiVersion: v1
kind: Namespace
metadata:
  name: miniodb-system
  labels:
    name: miniodb-system

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: miniodb-config
  namespace: miniodb-system
  labels:
    app.kubernetes.io/name: miniodb
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: miniodb-system
data:
  # Redis 配置
  redis-db: "0"
  redis-max-idle: "10"
  redis-max-active: "100"
  redis-idle-timeout: "300s"
  
  # MinIO 配置
  minio-bucket: "miniodb-data"
  minio-backup-bucket: "miniodb-backup"
  minio-region: "us-east-1"
  
  # 服务器配置
  server-read-timeout: "30s"
  server-write-timeout: "30s"
  server-idle-timeout: "60s"
  
  # JWT 配置
  jwt-expires-in: "24h"
  
  # 日志配置
  log-level: "info"
  log-format: "json"
  log-max-size: "100"
  log-max-backups: "3"
  log-max-age: "28"
  
  # 应用配置
  app-name: "MinIODB"
  app-version: "1.0.0"
  
  # 缓存配置
  cache-ttl: "1h"
  cache-cleanup-interval: "10m"
  
  # 限流配置
  rate-limit-requests: "1000"
  rate-limit-burst: "100"
  rate-limit-window: "1m"

---
# 注意：在生产环境中，Secrets应该通过外部工具管理，而不是直接在YAML文件中定义
# 这里仅作为示例，实际部署时应该使用 kubectl create secret 命令或其他安全方式
apiVersion: v1
kind: Secret
metadata:
  name: miniodb-secrets
  namespace: miniodb-system
  labels:
    app.kubernetes.io/name: miniodb
    app.kubernetes.io/component: secret
    app.kubernetes.io/part-of: miniodb-system
type: Opaque
data:
  # Redis 密码 (base64编码的 "redis123")
  redis-password: cmVkaXMxMjM=
  
  # MinIO 访问密钥 (base64编码的 "minioadmin")
  minio-access-key: bWluaW9hZG1pbg==
  # MinIO 密钥 (base64编码的 "minioadmin123")
  minio-secret-key: bWluaW9hZG1pbjEyMw==
  
  # MinIO 备份访问密钥 (base64编码的 "minioadmin")
  minio-backup-access-key: bWluaW9hZG1pbg==
  # MinIO 备份密钥 (base64编码的 "minioadmin123")
  minio-backup-secret-key: bWluaW9hZG1pbjEyMw==
  
  # JWT 密钥 (base64编码的 "your-super-secret-jwt-key-here")
  jwt-secret: eW91ci1zdXBlci1zZWNyZXQtand0LWtleS1oZXJl 