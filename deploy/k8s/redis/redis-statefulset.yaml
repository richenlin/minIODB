apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: miniodb-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: miniodb-system
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: miniodb-secrets
              key: redis-password
        command:
        - redis-server
        - /etc/redis/redis.conf
        - --requirepass
        - $(REDIS_PASSWORD)
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -a $REDIS_PASSWORD ping | grep PONG"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -a $REDIS_PASSWORD ping | grep PONG"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard"  # 根据集群情况修改
      resources:
        requests:
          storage: 10Gi 